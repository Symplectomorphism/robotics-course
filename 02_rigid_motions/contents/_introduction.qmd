# Coordinate Frames

## Coordinate frames {.smaller}

:::: {.columns}

::: {.column width="60%"}

::: {.fragment}
* A point is described by a *coordinate vector*.
  - The vector represents the displacement of a point w.r.t. some reference
    frame -- we call this a _bound_ vector.
  - Notice that a point is __not__ the same as a vector!
:::
::: {.fragment}
* A _coordinate frame_, is a triad of orthogonal axes which intersect at a
point, known as the origin.

* A real object comprises infinitely many points.
  - An object, unlike a point, has an orientation.
  - Attaching a coordinate frame to an object, every point within it can be
    described by a constant vector w.r.t. that frame.
* This allows us to describe the position and orientation, the __pose__, of that 
object's fixed frame w.r.t. a reference coordinate frame.
:::

:::


::: {.column width="40%"}
::: {layout="[1,1]" layout-valign="center"}
<img src="contents/assets/fig2_1a.svg" width="250" heigth="250" />

<img src="contents/assets/fig2_1b.svg" width="250" heigth="250" />
:::

::: {.callout-tip}
## Left
Point $P$ is described by a coordinate vector w.r.t. an absolute coordinate
frame.
:::

::: {.callout-tip}
## Right
The points are described w.r.t. object's coordinate frame {B}, which in turn is
described by a relative pose $\xi_B$.
:::

:::

::::


## Coordinate frames {.smaller}

:::: {.columns}

::: {.column width="65%"}
<br>

* We think of ${^A}\xi_B$ as describing some motion: pick up $\{A\}$ 
  - Apply a displacement and a rotation,
  - Now $\{A\}$ is transformed to $\{B\}$.
* If the initial superscript is missing, we assume that the pose is w.r.t. 
the world coordinate frame.
* The point $\boldsymbol{P}$ can be described w.r.t. _either_ coordinate frame:
$$ {^A}\bm{p} = {^A}\xi_B \bullet {^B}\bm{p}. $$
  - The operator $\bullet$ _transforms_ the vector.
  - The new vector describes the _same_ point but w.r.t. a different coordinate 
  frame.
:::

::: {.column width="35%"}
<img src="contents/assets/fig2_2.svg" width="500" heigth="500" />

::: {.callout-tip}
## Relative pose
The point $\boldsymbol{P}$ can be descrbied by coordinate vectors relative to 
either frame $\{A\}$ or $\{B\}$. The pose of $\{B\}$ relative to $\{A\}$ is 
${^A}\xi_B$.
:::

:::

::::


## Coordinate frames {.smaller}

&nbsp;

:::: {.columns}

::: {.column width="65%"}
* Relative poses can be _composed_ or _compounded_.
  $$ {^A}\xi_C = {^A}\xi_B \oplus {^B}\xi_C. $$

::: {.callout-note}
### Sub/super-script cancellation
If the subscript and superscript on each side of the $\oplus$ operator match, 
then we can _cancel out_ the intermediate sub/super-scripts.
  $$ {^X}\xi_Z = {^X}\xi_Y \oplus {^Y}\xi_Z. $$
:::

* For this case, the point $\bm{P}$ can be described by
  $$ {^A}\bm{p} = \left({^A}\xi_B \oplus {^B}\xi_C\right) \bullet {^C}\bm{p}. $$

* Later, we will convert these abstract notions of $\xi$, $\bullet$ and $\oplus$ 
into concrete mathematical objects and operators.
:::

::: {.column width="35%"}
<img src="contents/assets/fig2_3.svg" width="500" heigth="500" />

::: {.callout-tip}
## Relative pose
The point $\boldsymbol{P}$ can be descrbied by coordinate vectors relative to 
either frame $\{A\}$, $\{B\}$ or $\{C\}$. The frames are described by relative 
poses.
:::

:::

::::


## Coordinate frames: more complex example  {.smaller}

:::: {.columns}

::: {.column width="50%"}
* The fixed camera observes the object and estimates the object's pose 
${^F}\xi_B$.

* The other camera is not fixed, it is attached to the robot at some constant 
relative pose and estimates the object's pose ${^C}\xi_B$.

* An alternative representation of the spatial representation is a directed 
graph.
  - Each node represents a frame and each edge represents a relative pose.
  - Recall: we can compose relative poses, e.g.:
  $$
  \begin{aligned}
    \xi_F \oplus {^F}\xi_B &= \xi_R \oplus {^R}\xi_C \oplus {^C}\xi_B, \\
    \xi_F \oplus {^F}\xi_R &= \xi_R.
  \end{aligned}
  $$
  - Each equation represents a loop in the graph with each side of the equation 
  starting and ending at the same node.
:::

::: {.column width="50%"}
<center><img src="contents/assets/fig2_4.svg" width="500" heigth="500" /></center>

<center><img src="contents/assets/fig2_5.svg" width="300" heigth="300" /></center>

:::

::::


## Algebraic rules of relative poses {.smaller}

::: {.callout-tip}
## Group properties
There are just a few algebraic rules:

$$
\begin{aligned}
\xi \oplus 0 = \xi, \quad &\xi \ominus 0 = \xi, \\
\xi \ominus \xi = 0, \quad &\ominus \xi \oplus \xi = 0,
\end{aligned}
$$

where $0$ represents a zero relative pose. A pose has an inverse

$$ \ominus {^X}\xi_Y = {^Y}\xi_X, $$

which is represented graphically by an arrow from $\{Y\}$ to $\{X\}$. Relative 
poses can also be composed or compounded

$$ {^X}\xi_Y \oplus {^Y}\xi_Z = {^X}\xi_Z. $$

A relative pose can transform a point expressed as a vector relative to one 
frame to a vector relative to another
$$ {^X}\bm{p} = {^X}\xi_Y \bullet {^Y}\bm{p}. $$
:::

::: {.callout-warning}
## Composition is __NOT__ commutative
$$ \xi_1 \oplus \xi_2 \neq \xi_2 \oplus \xi_1, $$

with the exception being the case where $\xi_1 \oplus \xi_2 = 0$.
:::


## Algebraic manipulation of poses {.smaller}

* The second loop eqn. in our example says that the pose of the robot is the 
same as composing two relative poses:
  - from the world frame to the fixed camera,
  - from the fixed camera to the robot.

$$
\begin{aligned}
\ominus \xi_F \oplus \xi_F \oplus {^F}\xi_R &= \ominus \xi_F \oplus \xi_R \\
{^F}\xi_R &= \ominus \xi_F \oplus \xi_R,
\end{aligned}
$$

which is the pose of the robot relative to the fixed camera, shown as the 
dashed line in the directed graph.

::: {.callout-tip}
## Writing these expressions by inspection

To find the pose of node $X$ w.r.t. node $Y$:

* find a path from $\{Y\}$ to $\{X\}$ and write down the relative poses on the 
edges in a left-to-right order,
* if you traverse the edge in the direction of its arrow, precede it with the 
$\oplus$ operator, otherwise use $\ominus$.
:::
